apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-rules-extended
  namespace: monitoring
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      slack_api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alertmanager@example.com'

    templates:
      - '/etc/alertmanager/template/*.tmpl'

    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
      - match:
          severity: critical
        receiver: 'pager-duty'
        continue: true
      - match:
          severity: warning
        receiver: 'slack'
        continue: true

    receivers:
    - name: 'web.hook'
      webhook_configs:
      - url: 'http://127.0.0.1:5001/'
        send_resolved: true

    - name: 'slack'
      slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
        channel: '#alerts'
        title: '{{ template "slack.title" . }}'
        text: '{{ template "slack.text" . }}'
        send_resolved: true

    - name: 'pager-duty'
      pagerduty_configs:
      - routing_key: 'YOUR_PAGERDUTY_KEY'
        send_resolved: true

    - name: 'email'
      email_configs:
      - to: 'team@example.com'
        send_resolved: true

    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'dev', 'instance']
